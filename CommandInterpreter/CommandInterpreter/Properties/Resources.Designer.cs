//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CommandInterpreter.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CommandInterpreter.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Access is denied..
        /// </summary>
        internal static string AccessDenied {
            get {
                return ResourceManager.GetString("AccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на and.
        /// </summary>
        internal static string And {
            get {
                return ResourceManager.GetString("And", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The syntax of the command is incorrect..
        /// </summary>
        internal static string BadSyntax {
            get {
                return ResourceManager.GetString("BadSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Port is too big..
        /// </summary>
        internal static string BigPort {
            get {
                return ResourceManager.GetString("BigPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Creates UDP-chat for your secure communication.
        /// </summary>
        internal static string Chat {
            get {
                return ResourceManager.GetString("Chat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Local chat created using a UDP connection. Join yourself and call your friends..
        /// </summary>
        internal static string ChatDescr {
            get {
                return ResourceManager.GetString("ChatDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Port from which messages are sent.
        /// </summary>
        internal static string ChatLocalport {
            get {
                return ResourceManager.GetString("ChatLocalport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your name in the chat.
        /// </summary>
        internal static string ChatName {
            get {
                return ResourceManager.GetString("ChatName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Port on which messages come.
        /// </summary>
        internal static string ChatRemoteport {
            get {
                return ResourceManager.GetString("ChatRemoteport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clears the screen.
        /// </summary>
        internal static string Clear {
            get {
                return ResourceManager.GetString("Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sets the default console foreground and background colors.
        /// </summary>
        internal static string Color {
            get {
                return ResourceManager.GetString("Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specifies color of console background.
        /// </summary>
        internal static string ColorBackground {
            get {
                return ResourceManager.GetString("ColorBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Console support colors:.
        /// </summary>
        internal static string ColorDescr {
            get {
                return ResourceManager.GetString("ColorDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specifies color of console foreground.
        /// </summary>
        internal static string ColorForeground {
            get {
                return ResourceManager.GetString("ColorForeground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Creates .zip archive of files.
        /// </summary>
        internal static string Compact {
            get {
                return ResourceManager.GetString("Compact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All parameters is required. For multiple files/directories used syntax:.
        /// </summary>
        internal static string CompactDescr {
            get {
                return ResourceManager.GetString("CompactDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path to the directory which will be the archive.
        /// </summary>
        internal static string CompactDirectory {
            get {
                return ResourceManager.GetString("CompactDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Paths to files to be added to the archive.
        /// </summary>
        internal static string CompactFilename {
            get {
                return ResourceManager.GetString("CompactFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Comparing.
        /// </summary>
        internal static string Comparing {
            get {
                return ResourceManager.GetString("Comparing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copies one file to another location.
        /// </summary>
        internal static string Copy {
            get {
                return ResourceManager.GetString("Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All parameters is required.
        /// </summary>
        internal static string CopyDescr {
            get {
                return ResourceManager.GetString("CopyDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path to the new file.
        /// </summary>
        internal static string CopyDstFilename {
            get {
                return ResourceManager.GetString("CopyDstFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path to file to be copied.
        /// </summary>
        internal static string CopySourceFilename {
            get {
                return ResourceManager.GetString("CopySourceFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Could Not Find.
        /// </summary>
        internal static string CouldNotFind {
            get {
                return ResourceManager.GetString("CouldNotFind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на file(s) copied..
        /// </summary>
        internal static string CountCopiedFiles {
            get {
                return ResourceManager.GetString("CountCopiedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на file(s) moved..
        /// </summary>
        internal static string CountMovedFiles {
            get {
                return ResourceManager.GetString("CountMovedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Creates files.
        /// </summary>
        internal static string Create {
            get {
                return ResourceManager.GetString("Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Creates directories.
        /// </summary>
        internal static string Createdir {
            get {
                return ResourceManager.GetString("Createdir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Paths to directories to be added.
        /// </summary>
        internal static string CreateDirname {
            get {
                return ResourceManager.GetString("CreateDirname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Paths to new files to be added.
        /// </summary>
        internal static string CreateFilename {
            get {
                return ResourceManager.GetString("CreateFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The current date is:.
        /// </summary>
        internal static string CurrentDate {
            get {
                return ResourceManager.GetString("CurrentDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Displays the date.
        /// </summary>
        internal static string Date {
            get {
                return ResourceManager.GetString("Date", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type DATE to display the current date.
        /// </summary>
        internal static string DateDescr {
            get {
                return ResourceManager.GetString("DateDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Extract .zip file to directory.
        /// </summary>
        internal static string Decompact {
            get {
                return ResourceManager.GetString("Decompact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All parameters is required. sourceFilename must ends with &apos;.zip&apos;.
        /// </summary>
        internal static string DecompactDescr {
            get {
                return ResourceManager.GetString("DecompactDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path to the directory in which extract file.
        /// </summary>
        internal static string DecompactDirname {
            get {
                return ResourceManager.GetString("DecompactDirname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path to .zip file to be extarct.
        /// </summary>
        internal static string DecompactFilename {
            get {
                return ResourceManager.GetString("DecompactFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Deletes one or more files.
        /// </summary>
        internal static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Paths to files to be removed.
        /// </summary>
        internal static string DeleteFilename {
            get {
                return ResourceManager.GetString("DeleteFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Didn&apos;t find part of the path:.
        /// </summary>
        internal static string DidNotFindPart {
            get {
                return ResourceManager.GetString("DidNotFindPart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Files are different sizes..
        /// </summary>
        internal static string DiffrentSizes {
            get {
                return ResourceManager.GetString("DiffrentSizes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Directory of.
        /// </summary>
        internal static string Directory {
            get {
                return ResourceManager.GetString("Directory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The directory is not empty..
        /// </summary>
        internal static string DirectoryNotEmpty {
            get {
                return ResourceManager.GetString("DirectoryNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Compare error at LINE.
        /// </summary>
        internal static string ErrorCompareLine {
            get {
                return ResourceManager.GetString("ErrorCompareLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Compare error at OFFSET.
        /// </summary>
        internal static string ErrorCompareOffset {
            get {
                return ResourceManager.GetString("ErrorCompareOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quits the CommandInterpreter.EXE program (or chat).
        /// </summary>
        internal static string Exit {
            get {
                return ResourceManager.GetString("Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Compares the contents of two files.
        /// </summary>
        internal static string Fc {
            get {
                return ResourceManager.GetString("Fc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Displays differences in ASCII characters.
        /// </summary>
        internal static string FcAscii {
            get {
                return ResourceManager.GetString("FcAscii", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disregards case of ASCII letters when comparing files.
        /// </summary>
        internal static string FcCase {
            get {
                return ResourceManager.GetString("FcCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Displays differences in decimal format.
        /// </summary>
        internal static string FcDecimal {
            get {
                return ResourceManager.GetString("FcDecimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на To compare sets of files, use wildcards in filename1 and filename2 parameters. Files must be in text-format..
        /// </summary>
        internal static string FcDescr {
            get {
                return ResourceManager.GetString("FcDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specifies location and name of first file to compare.
        /// </summary>
        internal static string FcFirst {
            get {
                return ResourceManager.GetString("FcFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Displays line numbers for differences.
        /// </summary>
        internal static string FcLine {
            get {
                return ResourceManager.GetString("FcLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Compares only the first specified number of lines in each file.
        /// </summary>
        internal static string FcNumber {
            get {
                return ResourceManager.GetString("FcNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specifies location and name of second file to compare.
        /// </summary>
        internal static string FcSecond {
            get {
                return ResourceManager.GetString("FcSecond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The file cannot be copied onto itself..
        /// </summary>
        internal static string FileCannotCopied {
            get {
                return ResourceManager.GetString("FileCannotCopied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на For more information on a specific command, type HELP command-name.
        /// </summary>
        internal static string ForMoreInfo {
            get {
                return ResourceManager.GetString("ForMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Displays the name of or changes the current directory.
        /// </summary>
        internal static string Goto {
            get {
                return ResourceManager.GetString("Goto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type GOTO without parameters to display the current drive and directory.\nUse the /D switch to change current drive in addition to changing current directory for a drive.\n    ..    Specifies that you want to change to the parent directory..
        /// </summary>
        internal static string GotoDescr {
            get {
                return ResourceManager.GetString("GotoDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Canges current directory.
        /// </summary>
        internal static string GotoDirectory {
            get {
                return ResourceManager.GetString("GotoDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Provides Help information for commands.
        /// </summary>
        internal static string Help {
            get {
                return ResourceManager.GetString("Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Displays help information on that command.
        /// </summary>
        internal static string HelpCommand {
            get {
                return ResourceManager.GetString("HelpCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на is not recognized as an internal or external command..
        /// </summary>
        internal static string IncorrectCommand {
            get {
                return ResourceManager.GetString("IncorrectCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t find/open file:.
        /// </summary>
        internal static string IncorrectFile {
            get {
                return ResourceManager.GetString("IncorrectFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Local port is incorrect..
        /// </summary>
        internal static string IncorrectLocalPort {
            get {
                return ResourceManager.GetString("IncorrectLocalPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The system cannot find the path specified..
        /// </summary>
        internal static string IncorrectPath {
            get {
                return ResourceManager.GetString("IncorrectPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remote port is incorrect..
        /// </summary>
        internal static string IncorrectRemotePort {
            get {
                return ResourceManager.GetString("IncorrectRemotePort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Colors is not valid.
        /// </summary>
        internal static string InvalidColor {
            get {
                return ResourceManager.GetString("InvalidColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The directory name is invalid..
        /// </summary>
        internal static string InvalidDirname {
            get {
                return ResourceManager.GetString("InvalidDirname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на joined chat..
        /// </summary>
        internal static string Join {
            get {
                return ResourceManager.GetString("Join", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Changes language of your console to Russian or English.
        /// </summary>
        internal static string Lang {
            get {
                return ResourceManager.GetString("Lang", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на lefted chat.
        /// </summary>
        internal static string Left {
            get {
                return ResourceManager.GetString("Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Moves one or more files from one directory to another directory.
        /// </summary>
        internal static string Move {
            get {
                return ResourceManager.GetString("Move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path to the directory in which move files.
        /// </summary>
        internal static string MoveDirname {
            get {
                return ResourceManager.GetString("MoveDirname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Paths to files to be moved.
        /// </summary>
        internal static string MoveFilename {
            get {
                return ResourceManager.GetString("MoveFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name of first file to compare: .
        /// </summary>
        internal static string NameFirstFile {
            get {
                return ResourceManager.GetString("NameFirstFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name of second file to compare: .
        /// </summary>
        internal static string NameSecondFile {
            get {
                return ResourceManager.GetString("NameSecondFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на is not archive..
        /// </summary>
        internal static string NotArchive {
            get {
                return ResourceManager.GetString("NotArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Files compare OK..
        /// </summary>
        internal static string OkCompare {
            get {
                return ResourceManager.GetString("OkCompare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Overwrite.
        /// </summary>
        internal static string Overwrite {
            get {
                return ResourceManager.GetString("Overwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Removes a directory.
        /// </summary>
        internal static string Removedir {
            get {
                return ResourceManager.GetString("Removedir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If directory is not empty and you want to delete it use &apos;recursive&apos;-deleting..
        /// </summary>
        internal static string RemovedirDescr {
            get {
                return ResourceManager.GetString("RemovedirDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path to the removed directory.
        /// </summary>
        internal static string RemoveDirname {
            get {
                return ResourceManager.GetString("RemoveDirname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Removes all directories and files in the specified directory in addition to the directory itself.
        /// </summary>
        internal static string RemovedirRecursive {
            get {
                return ResourceManager.GetString("RemovedirRecursive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name of destination directory is required..
        /// </summary>
        internal static string RequiredDstDir {
            get {
                return ResourceManager.GetString("RequiredDstDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Local port is required argument..
        /// </summary>
        internal static string RequiredLocalPort {
            get {
                return ResourceManager.GetString("RequiredLocalPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remote port is required argument.
        /// </summary>
        internal static string RequiredRemotePort {
            get {
                return ResourceManager.GetString("RequiredRemotePort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Displays a list of files and subdirectories in a directory.
        /// </summary>
        internal static string Show {
            get {
                return ResourceManager.GetString("Show", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Displays files with specified attributes.
        /// </summary>
        internal static string ShowAttributes {
            get {
                return ResourceManager.GetString("ShowAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Displays date of file and directories created.
        /// </summary>
        internal static string ShowCreated {
            get {
                return ResourceManager.GetString("ShowCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You can use attributes (attr1,attr2,attr3)\n\tD  Directories\n\tH  Hidden files and directories\n\tR  Readonly files and directories\n\tS  System files and directories\n.
        /// </summary>
        internal static string ShowDescr {
            get {
                return ResourceManager.GetString("ShowDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path to the directory.
        /// </summary>
        internal static string ShowDirname {
            get {
                return ResourceManager.GetString("ShowDirname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Displays files&apos; sizes.
        /// </summary>
        internal static string ShowSize {
            get {
                return ResourceManager.GetString("ShowSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure.
        /// </summary>
        internal static string Sure {
            get {
                return ResourceManager.GetString("Sure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sets the window title for a CommandInterpreter.EXE session.
        /// </summary>
        internal static string Title {
            get {
                return ResourceManager.GetString("Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specifies the title for the command prompt window.
        /// </summary>
        internal static string TitleTitle {
            get {
                return ResourceManager.GetString("TitleTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Try HELP for more information..
        /// </summary>
        internal static string TryHelp {
            get {
                return ResourceManager.GetString("TryHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Displays current user&apos;s name.
        /// </summary>
        internal static string Whoami {
            get {
                return ResourceManager.GetString("Whoami", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File yet exists in this directory..
        /// </summary>
        internal static string YetExists {
            get {
                return ResourceManager.GetString("YetExists", resourceCulture);
            }
        }
    }
}
